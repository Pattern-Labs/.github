name: Build Molecule

on:
  workflow_call:
    inputs:
      molecule_path:
        description: path to molecule to build
        required: true
        type: string
      tag:
        description: tag to tag built images with
        required: true
        type: string
      with_cloud_cache:
        description: whether to use the cloud cache
        required: false
        type: boolean
        default: false

jobs:
  build-molecule:
    name: Build ${{ inputs.molecule_path }}
    runs-on: [github-hosted-cloud-builder]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Helm
        uses: Azure/setup-helm@v3

      - name: Log in to Harbor Registry
        run: |
          echo '${{ secrets.HELM_PASSWORD }}' | helm registry login harbor.rutherford.patternlabs.tech -u '${{ secrets.HELM_USER }}' --password-stdin

      - name: Setup .netrc
        uses: Pattern-Labs/.github/.github/actions/setup_netrc@main
        with:
          repo_access_pat: ${{ secrets.REPO_ACCESS_PAT }}

      - name: Install the Pattern CLI
        uses: Pattern-Labs/.github/.github/actions/pattern_cli@main

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true

      - name: Setup Docker Layer Caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Set Up Build Cache Credentials
        if: ${{ inputs.with_cloud_cache }}
        env:
          DATA: "${{ secrets.GOOGLE_CLOUD_BUILD_CACHE_ACCESS_KEY }}"
        run: echo $DATA > ./google-services.json

      - name: Build Molecule
        run: |
          cd ${{ inputs.molecule_path }}
          pattern molecule build -t ${{ inputs.tag }} --with_cloud_cache=${{ inputs.with_cloud_cache }}
